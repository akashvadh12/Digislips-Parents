class Teacher {
  final String uid; // Auto-generated by Firebase Auth
  final String fullName;
  final String email;
  final String phone;
  final String parentUid;
  final String department; // Added department field
  final bool profileComplete;
  final String? profileImageUrl;
  final bool isEmailVerified;

  Teacher({
    required this.uid,
    required this.fullName,
    required this.email,
    required this.phone,
    required this.parentUid,
    required this.department, // Added department parameter
    required this.profileComplete,
    this.profileImageUrl,
    required this.isEmailVerified,
  });

  // Convert Teacher object to Map for Firestore
  Map<String, dynamic> toMap() {
    return {
      'uid': uid,
      'fullName': fullName,
      'email': email,
      'phone': phone,
      'parentUid': parentUid,
      'department': department, // Added department to map
      'profileComplete': profileComplete,
      'profileImageUrl': profileImageUrl,
      'isEmailVerified': isEmailVerified,
      'createdAt': DateTime.now().toIso8601String(),
      'updatedAt': DateTime.now().toIso8601String(),
    };
  }

  // Create Teacher object from Map (Firestore document)
  factory Teacher.fromMap(Map<String, dynamic> map) {
    return Teacher(
      uid: map['uid'] ?? '',
      fullName: map['fullName'] ?? '',
      email: map['email'] ?? '',
      phone: map['phone'] ?? '',
      parentUid: map['parentUid'] ?? '',
      department: map['department'] ?? '', // Added department from map
      profileComplete: map['profileComplete'] ?? false,
      profileImageUrl: map['profileImageUrl'],
      isEmailVerified: map['isEmailVerified'] ?? false,
    );
  }

  // Create a copy of Teacher with some fields updated
  Teacher copyWith({
    String? uid,
    String? fullName,
    String? email,
    String? phone,
    String? parentUid,
    String? department, // Added department parameter
    bool? profileComplete,
    String? profileImageUrl,
    bool? isEmailVerified,
  }) {
    return Teacher(
      uid: uid ?? this.uid,
      fullName: fullName ?? this.fullName,
      email: email ?? this.email,
      phone: phone ?? this.phone,
      parentUid: parentUid ?? this.parentUid,
      department: department ?? this.department, // Added department to copyWith
      profileComplete: profileComplete ?? this.profileComplete,
      profileImageUrl: profileImageUrl ?? this.profileImageUrl,
      isEmailVerified: isEmailVerified ?? this.isEmailVerified,
    );
  }

  @override
  String toString() {
    return 'Teacher(uid: $uid, fullName: $fullName, email: $email, phone: $phone, parentUid: $parentUid, department: $department, profileComplete: $profileComplete, profileImageUrl: $profileImageUrl, isEmailVerified: $isEmailVerified)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Teacher &&
        other.uid == uid &&
        other.fullName == fullName &&
        other.email == email &&
        other.phone == phone &&
        other.parentUid == parentUid &&
        other.department == department && // Added department to equality check
        other.profileComplete == profileComplete &&
        other.profileImageUrl == profileImageUrl &&
        other.isEmailVerified == isEmailVerified;
  }

  @override
  int get hashCode {
    return uid.hashCode ^
        fullName.hashCode ^
        email.hashCode ^
        phone.hashCode ^
        parentUid.hashCode ^
        department.hashCode ^ // Added department to hashCode
        profileComplete.hashCode ^
        profileImageUrl.hashCode ^
        isEmailVerified.hashCode;
  }
}